DECLARE
CURSOR cPrv IS
SELECT distinct P.RUC,P.NOMBRE,P.DIRECCION FROM PROVISAFI P,PROVEEDORES PRV
WHERE PRV.RUC=P.RUC;
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES
    SET NOMBRE_LEGAL=rPrv.NOMBRE
    WHERE RUC=rPrv.RUC AND NOMBRE_LEGAL IS NULL;
    I:=I+1;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/

DECLARE
CURSOR cPrv IS
SELECT P.RUC,P.NOMBRE,REPLACE(P.DIRECCION,'"','') DIRECCION
FROM PROVISAFI_RESP P,PROVEEDORES PRV
WHERE PRV.RUC=P.RUC AND P.DIRECCION!='.';
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES
    SET DIRECCION=rPrv.Direccion
    WHERE RUC=rPrv.RUC;
    I:=I+1;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/


DECLARE
CURSOR cPrv IS
SELECT p.ruc,P.NOMBRE,prv.nombre_legal FROM PROVISAFI P,PROVEEDORES PRV
WHERE nvl(prv.nombre_legal,prv.nombre)=P.nombre
and prv.ruc!=p.ruc;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES
    SET ruc=rprv.ruc
    WHERE nvl(prv.nombre_legal,prv.nombre)=P.nombre and prv.ruc!=p.ruc;
  END LOOP;
END;
/


DECLARE
CURSOR cPrv IS
SELECT PRV.CODIGO,p.ruc,P.NOMBRE,prv.nombre_legal FROM PROVISAFI P,PROVEEDORES PRV
WHERE INSTR(P.nombre,prv.nombre)>1
and NVL(prv.ruc,'XXX')!=p.ruc AND PRV.RUC IS NULL
AND CODIGO NOT IN (10,280,345,333,414);
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES PRV
    SET ruc=rprv.ruc,nombre_legal=rprv.nombre
WHERE prv.CODIGO=RpRV.CODIGO AND PRV.RUC IS NULL
AND CODIGO NOT IN (10,280,345,333,414);
    I:=I+1;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;


DECLARE
CURSOR cPrv IS
SELECT prv.codigo,r.ruc
FROM PROVEEDORES PRV, RUCS R
WHERE PRV.CODIGO=R.CODIGO;
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES
    SET ruc=rPrv.ruc
    WHERE codigo=rprv.codigo;
    I:=I+1;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/


select r.*,p.*
from proveedores p,rucs r
where p.ruc=r.ruc


SELECT PRV.CODIGO        ,                 
NVL(PRV.RUC,A.RUC)     RUC                       ,
NVL(PRV.NOMBRE,A.NOMBRE)  NOMBRE              ,         
NVL(PRV.DIRECCION,A.DIRECCION)  DIRECCION                    ,
NVL(PRV.NOMBRE_LEGAL,A.NOMBRE)                NOMBRE_LEGAL   ,
PRV.TELEFONO                       ,
PRV.CIUDAD                         ,
PRV.AUTORIZACION_SRI               ,
NVL(PRV.CONTRIBUYENTE_ESPECIAL,'F')    C     ,
NVL(PRV.RETENCION_FUENTE,'V')          R     
FROM PROVEEDORES PRV,
(SELECT DISTINCT *
FROM PROVISAFI
WHERE RUC IN ( 
SELECT P.RUC
FROM PROVISAFI P,PROVEEDORES R
WHERE P.RUC=R.RUC)
UNION
SELECT DISTINCT *
FROM PROVISAFI
WHERE DIRECCION NOT LIKE '.' ) A
WHERE PRV.RUC(+)=A.RUC
ORDER BY 3
/

DECLARE
CURSOR cPrv IS
SELECT distinct P.CODIGO,P.RUC,P.NOMBRE FROM PROVISAFI P,PROVEEDORES PRV
WHERE PRV.CODIGO=P.CODIGO
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
    UPDATE PROVEEDORES
    SET RUC=rPrv.RUC
    WHERE CODIGO=rPrv.CODIGO AND RUC!=rPrv.RUC;
    IF %SQLROWCOUNT% THEN
      I:=I+1;
    END IF;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/



DECLARE
CURSOR cPrv IS
SELECT P.CODIGO,REPLACE(P.CUENTA,'.','') cuenta FROM CUENTAS_A_SUBIR P,PROVEEDORES PRV
WHERE PRV.CODIGO=P.CODIGO
AND P.TIPO='G';
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
--  DBMS_OUTPUT.PUT_LINE(rPrv.codigo||' '||rprv.cuenta);
    INSERT INTO CUENTAS_ASOCIADAS
SELECT CNTASC_SEQ.NEXTVAL,
TIPO_DE_CUENTA         ,
TIPO_DE_ASOCIACION     ,
rPrv.codigo,
rprv.cuenta            ,
EMP_CODIGO             ,
OBSERVACION            ,
AGRCNT_TIPO            ,
AGRCNT_CODIGO
 FROM CUENTAS_ASOCIADAS
WHERE TIPO_DE_CUENTA like 'PRV' AND TIPO_DE_ASOCIACION IN ('OBL','RTN') and clave_relacionada=0;
    IF SQL%ROWCOUNT=2 THEN
      I:=I+1;
    else
  DBMS_OUTPUT.PUT_LINE(rPrv.codigo||' error '||rprv.cuenta);
      exit;
    END IF;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/


DECLARE
CURSOR cPrv IS
SELECT P.CODIGO,REPLACE(P.CUENTA,'.','') cuenta FROM CUENTAS_A_SUBIR P,PROVEEDORES PRV
WHERE PRV.CODIGO=P.CODIGO
AND P.TIPO='A';
I NUMBER:=0;
BEGIN
  FOR rPrv IN cPrv LOOP
--  DBMS_OUTPUT.PUT_LINE(rPrv.codigo||' '||rprv.cuenta);
    INSERT INTO CUENTAS_ASOCIADAS
SELECT CNTASC_SEQ.NEXTVAL,
TIPO_DE_CUENTA         ,
TIPO_DE_ASOCIACION     ,
rPrv.codigo,
rprv.cuenta            ,
EMP_CODIGO             ,
OBSERVACION            ,
AGRCNT_TIPO            ,
AGRCNT_CODIGO
 FROM CUENTAS_ASOCIADAS
WHERE TIPO_DE_CUENTA like 'PAF' AND TIPO_DE_ASOCIACION IN ('OBL','RTN') and clave_relacionada=162;
    IF SQL%ROWCOUNT=2 THEN
      I:=I+1;
    else
  DBMS_OUTPUT.PUT_LINE(rPrv.codigo||' error '||rprv.cuenta);
      exit;
    END IF;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE(I);
END;
/
