/* Calcular Base Imponible Prorrateada */
FUNCTION  CALCULAR_BASE_IMPONIBLE
  (CEMPRESA  IN  EMPRESAS.CODIGO%TYPE
  ,NEMPLEADO  IN  EMPLEADOS_ROLES.CODIGO%TYPE
  ,NNUMROL  IN  ROLES_DE_PAGOS.NUMERO%TYPE
  )
  RETURN  NUMBER
  IS
-- Program Data
VPERIODO NUMBER;
VBASE_IMPONIBLE NUMBER(21, 6);

-- PL/SQL Block
 BEGIN
-- Calcula el Impuesto a la Renta mensual 
BEGIN
   VBASE_IMPONIBLE:=0;
   SELECT ROUND(SUM(NVL(DEBE,(HABER*-1))),2) INTO VBASE_IMPONIBLE
   FROM MOVIMIENTOS_ROLES
   WHERE ROLPGS_EMP_CODIGO = CEMPRESA AND
         ROLPGS_NUMERO = NNUMROL AND
         EMPROL_EMP_CODIGO = CEMPRESA AND      
         EMPROL_CODIGO = NEMPLEADO AND
         PRMROL_EMP_CODIGO = CEMPRESA AND
         PRMROL_CODIGO IN (SELECT CODIGO 
                           FROM PARAMETROS_ROLES
                           WHERE EMP_CODIGO = CEMPRESA AND
                                 APLICA_IR = 'V' AND
                                 ESTADO_DE_DISPONIBILIDAD = 'D')AND
         ESTADO <> 'A';
   IF VBASE_IMPONIBLE >=0 THEN
        VPERIODO := 1;
 --     VPERIODO := OBTENER_PERIODO_EMPRESA(CEMPRESA,NULL,NULL);
      RETURN ROUND(VBASE_IMPONIBLE*VPERIODO*12,2);
   ELSIF VBASE_IMPONIBLE < 0 THEN
       RAISE_APPLICATION_ERROR(-20110,'Error, Base Imponible negativa para cálculo de Imp. Renta');
   ELSIF VBASE_IMPONIBLE IS NULL THEN
       RAISE_APPLICATION_ERROR(-20110,'Error, El Valor de la Base Imponible no puede ser nulo');
   END IF;
EXCEPTION
WHEN OTHERS THEN 
    RAISE_APPLICATION_ERROR(-20110,'CALCULAR_BASE_IMPONIBLE'||SQLERRM);
END;
END CALCULAR_BASE_IMPONIBLE; 


/* Calcular el Impuesto a la Renta */
FUNCTION  CALCULAR_IMPUESTO_RENTA
  (CEMPRESA  IN  EMPRESAS.CODIGO%TYPE
  ,NEMPLEADO  IN  EMPLEADOS_ROLES.CODIGO%TYPE
  ,NNUMROL  IN  ROLES_DE_PAGOS.NUMERO%TYPE
  )
  RETURN  NUMBER
  IS
-- Program Data
VPRM_APORTE_IESS VARCHAR2(5);
VPRM_INGRESOS VARCHAR2(5);
VMES_ROL NUMBER(2);
VIMPUESTO NUMBER(21, 6);
VANIO_ROL NUMBER(4);
VIMP_RENTA NUMBER(21, 6);
VBASE_IMPONIBLE NUMBER(21, 6);
VTOTAL_INGRESOS NUMBER(21, 6);
VTOTAL_APORTE_IESS NUMBER;
VPERIODO NUMBER(1);
VANIO_RENTA NUMBER(4);
VPRM_IMPUESTO VARCHAR2(5);
VBASE NUMBER(21, 6);
VLIMINF NUMBER(21, 6);
VEXEDENTE NUMBER(3);
VTOTAL_IMPRENTA NUMBER(21, 6);
VLIMSUP NUMBER(21, 6);

-- PL/SQL Block
 BEGIN
-- Calcula el Impuesto a la Renta mensual 
BEGIN
   BEGIN
      SELECT ANO,MES INTO VANIO_ROL,VMES_ROL
      FROM ROLES_DE_PAGOS 
      WHERE EMP_CODIGO = CEMPRESA AND
            NUMERO = NNUMROL;
      SELECT MAX(TO_NUMBER(TO_CHAR(ANO_RIGE,'YYYY'))) INTO VANIO_RENTA
      FROM TABLAS_IMPUESTO_RENTA
      WHERE TO_NUMBER(TO_CHAR(ANO_RIGE,'YYYY')) <= VANIO_ROL; 
   EXCEPTION 
      WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20110,'No existe una Tabla Actualizada de Impuesto a la Renta');
   END;
BEGIN  
   DECLARE 
   CURSOR DETALLES_RENTAS IS 
   SELECT LIMITE_INFERIOR,LIMITE_SUPERIOR,IMPUESTO_BASICO,IMPUESTO_EXEDENTE      
   FROM DETALLES_IMPUESTO_RENTA
   WHERE TO_NUMBER(TO_CHAR(TBLIMPRNT_ANO_RIGE,'YYYY'))= VANIO_RENTA;
   BEGIN
      VBASE_IMPONIBLE:=0;
      VIMPUESTO:=0;  
      VBASE_IMPONIBLE:= CALCULAR_BASE_IMPONIBLE(CEMPRESA,NEMPLEADO,NNUMROL); 
      IF VBASE_IMPONIBLE >0 THEN
         --VPERIODO := OBTENER_PERIODO_EMPRESA(CEMPRESA,NULL,NULL);
         VPERIODO := 1;
         OPEN DETALLES_RENTAS;
         LOOP
            FETCH DETALLES_RENTAS INTO VLIMINF,VLIMSUP,VBASE,VEXEDENTE;                
            EXIT WHEN DETALLES_RENTAS%NOTFOUND;
            IF ((VBASE_IMPONIBLE) BETWEEN VLIMINF AND VLIMSUP) THEN
                VIMPUESTO := ((VBASE + ((VEXEDENTE /100)* (VBASE_IMPONIBLE - VLIMINF)))/12)/VPERIODO; 
            END IF;
         END LOOP;
         CLOSE DETALLES_RENTAS;
      ELSIF VBASE_IMPONIBLE < 0 THEN
         RAISE_APPLICATION_ERROR(-20110,'Error, Base Imponible negativa para cálculo de Imp. Renta');
      END IF;
      IF VMES_ROL < 12 THEN  -- Si el mes no es diciembre, retorna el impuesto correpondiente  
         RETURN VIMPUESTO;
      ELSIF VMES_ROL = 12 THEN    
      -- Si se está calculando el impuesto a la renta de Diciembre, se debe hacer el ajuste
         BEGIN
            SELECT PRMROL_CODIGO INTO VPRM_INGRESOS
            FROM PARAMETROS_ESPECIALES
            WHERE REPORTE_ESPECIAL = 'ROLRPTFRM107' AND 
                  ORDEN = 1;
         EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20110,'No se ha definido un parámetro especial para el total de ingresos ');
         END;
         BEGIN
            SELECT PRMROL_CODIGO INTO VPRM_APORTE_IESS
            FROM PARAMETROS_ESPECIALES
            WHERE REPORTE_ESPECIAL = 'ROLRPTFRM107' AND 
                  ORDEN = 2;
         EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20110,'No se ha definido un parámetro especial para el aporte al iess ');
         END;
         BEGIN
            SELECT PRMROL_CODIGO INTO VPRM_IMPUESTO
            FROM PARAMETROS_ESPECIALES
            WHERE REPORTE_ESPECIAL = 'ROLRPTFRM107' AND 
                  ORDEN = 3;
         EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20110,'No se ha definido un parámetro especial para el impuesto a la renta mensual');
         END;
         IF VPRM_INGRESOS IS NOT NULL  AND VPRM_IMPUESTO IS  NOT NULL AND VPRM_APORTE_IESS IS NOT NULL THEN
         -- Obtiene el total de ingresos  y el total de impuesto a la renta al año;
            VTOTAL_INGRESOS:= OBTENER_TOTAL_PARAMETRO(CEMPRESA,NEMPLEADO,VPRM_INGRESOS,VANIO_ROL,1,12);
            VTOTAL_APORTE_IESS := OBTENER_TOTAL_PARAMETRO(CEMPRESA,NEMPLEADO,VPRM_APORTE_IESS,VANIO_ROL,1,12);
            VTOTAL_IMPRENTA:= VIMPUESTO + OBTENER_TOTAL_PARAMETRO(CEMPRESA,NEMPLEADO,VPRM_IMPUESTO,VANIO_ROL,1,11);            
            OPEN DETALLES_RENTAS;
            LOOP
               FETCH DETALLES_RENTAS INTO VLIMINF,VLIMSUP,VBASE,VEXEDENTE;                
               EXIT WHEN DETALLES_RENTAS%NOTFOUND;
               IF ((VTOTAL_INGRESOS) BETWEEN VLIMINF AND VLIMSUP) THEN
                   VIMP_RENTA := VBASE + (VEXEDENTE /100)* ((VTOTAL_INGRESOS-VTOTAL_APORTE_IESS) - VLIMINF); 
               END IF;
            END LOOP;
            CLOSE DETALLES_RENTAS;
            IF VIMP_RENTA > VTOTAL_IMPRENTA THEN
            -- Si el impuesto real es mayor al total de impuesto retenido en el año 
            -- ajusta la diferencia en el impuesto de diciembre 
               VIMPUESTO:= VIMPUESTO + (VIMP_RENTA - VTOTAL_IMPRENTA);
            ELSIF VTOTAL_IMPRENTA > VIMP_RENTA THEN
               VIMPUESTO := VIMPUESTO - (VTOTAL_IMPRENTA-VIMP_RENTA);
            ELSIF VTOTAL_IMPRENTA = VIMP_RENTA THEN
               VIMPUESTO:= VIMPUESTO;
            END IF;
            IF VIMPUESTO > 0 THEN  
               RETURN VIMPUESTO;
            ELSE   
               RETURN 0;
            END IF;
         END IF;
      END IF;
      RETURN 0;
   EXCEPTION
   WHEN OTHERS THEN 
       RAISE_APPLICATION_ERROR(-20110,'CALCULAR_IMPUESTO_RENTA'||SQLERRM);
   END;
END;
END;
END CALCULAR_IMPUESTO_RENTA; 

