CREATE OR REPLACE PACKAGE "GNRL" IS
 -- Sub-Program Unit Declarations
/* Validar el RUC y la cedula */
FUNCTION VALIDAR_RUC_Y_CEDULA
 (VID VARCHAR2
 ,VIDVALIDACION VARCHAR2 := NULL
 ,VTIPOCMP VARCHAR2 := NULL
 ,VMOSTRAROESCRIBIR CHAR := NULL
 )
 RETURN NUMBER;

/* Calcular el valor por ventas a domicilio */
FUNCTION CALCULAR_VALOR_DOMICILIO
 (VA_DOMICILIO VARCHAR2
 ,VAPLICARVENTASDOMICILIO VARCHAR2
 ,NTOTAL NUMBER
 )
 RETURN NUMBER;
/* Renovar fecha termino paciente */
PROCEDURE RENOVAR_FECHA_TERMINO_PCN
 (NHC NUMBER
 ,VCLSF VARCHAR2
 );
/* Pasar de dos decimales a fracciones de centésima 24/100 */
FUNCTION  CENTAVOS_A_FRACCIONES
  (NNUMERO  IN  NUMBER
  ,VETIQUETAPLURAL  IN  VARCHAR2
  ,VETIQUETASINGULAR  IN  VARCHAR2
  )
  RETURN  CHARACTER;
 /* Realizar la función básica de 3 cifras a letras. */
FUNCTION  NUMERO_3_CIFRAS_A_LETRAS
  (NNUMERO  IN  NUMBER
  ,VETIQUETA  IN  VARCHAR2
  )
  RETURN  VARCHAR2;
 /* Pasar de centavos a letras. */
FUNCTION  CENTAVOS_A_LETRAS
  (NNUMERO  IN  NUMBER
  ,VETIQUETAPLURAL  IN  VARCHAR  :=  'CENTAVOS'
  ,VETIQUETASINGULAR  IN  VARCHAR2  :=  'CENTAVO'
  )
  RETURN  VARCHAR2;
 /* Recibe un número, y devuelve en formato de letras. */
FUNCTION  NUMERO_A_LETRAS
  (NNUMERO  IN  NUMBER
  ,VMONEDAPLURAL  IN  VARCHAR2
  ,VMONEDASINGULAR  IN  VARCHAR2
  ,VDECIMALESPLURAL  IN  VARCHAR2
  ,VDECIMALESSINGULAR  IN  VARCHAR2
  ,VCENTAVOS_EN_FRACCION  IN  VARCHAR2
  )
  RETURN  VARCHAR2;
 /* Devuelve el total que debe el paciente */
FUNCTION  TOTAL_DEUDA_PACIENTE
  (NHC  CUENTAS.PCN_NUMERO_HC%TYPE
  )
  RETURN  NUMBER;
 PRAGMA  RESTRICT_REFERENCES  (TOTAL_DEUDA_PACIENTE,  WNDS);
 /* Devuelve la ultima promocion a la que pertenece el paciente */
FUNCTION  DEVOLVER_ULTIMA_PROMOCION
  (NHC  IN  PACIENTES.NUMERO_HC%TYPE
  ,DFECHA  IN  DATE  :=  NULL
  )
  RETURN  VARCHAR2;
 PRAGMA  RESTRICT_REFERENCES  (DEVOLVER_ULTIMA_PROMOCION,  WNDS);
 
FUNCTION  DEVOLVER_COD_ULTIMA_PROMOCION
  (NHC  IN  PACIENTES.NUMERO_HC%TYPE
  ,DFECHA  IN  DATE  :=  NULL
  )
  RETURN  VARCHAR2;
 
 /* Devolver datos de la internación de un paciente */
PROCEDURE  DEVOLVER_DATOS_INTERNACION
  (NINTERNACION  IN  PERMANENCIAS_Y_ATENCIONES.NUMERO%TYPE
  ,VPACIENTE  OUT  VARCHAR2
  ,DFECHAING  OUT  DATE
  ,DFECHAALT  OUT  DATE
  );
 /* Ver si el rol esta habilitado o no */
FUNCTION  ROL_HABILITADO
  (VROL  VARCHAR2  :=  NULL
  ,DFECHA  DATE  :=  NULL
  ,NDIAS  NUMBER  :=  NULL
  )
  RETURN  BOOLEAN;
 /* DEVUELVE LA CLASIFICACION DEL PACIENTE */
FUNCTION  CLASIFICACION_PACIENTE
  (NHC  PACIENTES.CLASIFICACION%TYPE
  )
  RETURN  VARCHAR2;
 /* Actualizar las secuencias de los code controls. */
PROCEDURE  ACTUALIZA_SECUENCIA
  (P_CC_DOMAIN  VARCHAR2
  ,P_CC_TARGET  IN  OUT  NUMBER
  );
 /* Devuelve la cama en la que se encuentra internado el paciente */
FUNCTION  DEVUELVE_CAMA
  (NHC  IN  PACIENTES.NUMERO_HC%TYPE
  ,DFECHA  DATE  :=  SYSDATE
  )
  RETURN  VARCHAR2;
 PRAGMA  RESTRICT_REFERENCES  (DEVUELVE_CAMA,  WNDS);
 /* Centralización de la carga de la cuenta */
PROCEDURE  CARGAR_CUENTA
  (P_NUMERO  IN  CUENTAS.NUMERO%TYPE
  ,P_DETALLE  IN  CUENTAS.DETALLE%TYPE
  ,P_ARA_GENERADORA  IN  CUENTAS.DPR_ARA_CODIGO%TYPE
  ,P_DPR_GENERADORA  IN  CUENTAS.DPR_CODIGO%TYPE
  ,P_CANTIDAD  IN  CUENTAS.CANTIDAD%TYPE
  ,P_CRG_TIPO  IN  CUENTAS.CRG_TIPO%TYPE
  ,P_CODIGO  IN  CUENTAS.CRG_CODIGO%TYPE
  ,P_DOCUMENTO  IN  CUENTAS.DOCUMENTO%TYPE
  ,P_PCN_NUMERO_HC  IN  CUENTAS.PCN_NUMERO_HC%TYPE
  ,P_INS_OR_UPD  IN  VARCHAR2
  ,P_PRECIO_VENTA  IN  NUMBER  :=  NULL
  ,P_FECHA  IN  DATE  :=  NULL
 ,P_OBSERVACION IN VARCHAR2 := NULL
  );
 /* Fija la promoción del paciente */
PROCEDURE  FIJAR_PROMOCION_PACIENTE
  (NHC  PROMOCIONES_PACIENTES.PCN_NUMERO_HC%TYPE
  ,VPRMCOD  PROMOCIONES_PACIENTES.PRM_CODIGO%TYPE
  ,VPRSCOD  PROMOCIONES_PACIENTES.PRS_CODIGO%TYPE
  ,VOBS  PROMOCIONES_PACIENTES.OBSERVACION%TYPE
  );
/* Escribe el error en la tabla de errores */
PROCEDURE ESCRIBIR_ERRORES
 (P_MESG IN VARCHAR2
 ,P_PARAM0 IN VARCHAR2 := NULL
 ,P_PARAM1 IN VARCHAR2 := NULL
 ,P_PARAM2 IN VARCHAR2 := NULL
 ,P_PARAM3 IN VARCHAR2 := NULL
 ,P_PARAM4 IN VARCHAR2 := NULL
 ,P_PARAM5 IN VARCHAR2 := NULL
 ,P_PARAM6 IN VARCHAR2 := NULL
 ,P_PARAM7 IN VARCHAR2 := NULL
 ,P_PARAM8 IN VARCHAR2 := NULL
 ,P_PARAM9 IN VARCHAR2 := NULL
 );
 /* Centralización de la carga de honorarios médicos */
PROCEDURE CARGAR_HONORARIO
 (P_NUMERO IN CUENTAS.NUMERO%TYPE
 ,P_BENEFICIARIO IN PERSONAL.CODIGO%TYPE
 ,P_ID IN CUENTAS.DETALLE%TYPE
 ,P_CANTIDAD IN CUENTAS.CANTIDAD%TYPE
 ,P_DOCUMENTO IN CUENTAS.DOCUMENTO%TYPE
 ,P_PCN_NUMERO_HC IN CUENTAS.PCN_NUMERO_HC%TYPE
 ,P_INS_OR_DEL IN VARCHAR2
 ,P_FECHA IN DATE := NULL
 ,P_TIPO_REMUNERACION IN VARCHAR2 := 'HNR'
 ,P_EVLCLN IN HOJAS_DE_EVOLUCION.NUMERO%TYPE
 ,P_PRCHSP_CODIGO IN PROCEDIMIENTOS_HOSPITALARIOS.CODIGO%TYPE
 ,P_LATERALIDAD IN PROCEDIMIENTOS_REALIZADOS.LATERALIDAD%TYPE
 ,P_CASO IN NUMBER := 4
 ,P_CONDICION NUMBER := 1
 ,P_DIVISOR IN NUMBER := 1
 ,P_POOL IN NUMBER := 0
 ); 
 /* Genera los honorarios médicos de acuerdo a los proceidmientos realizad */
PROCEDURE CARGAR_HONORARIO_POR_PROCEDIMI
 (P_NUMPARTE IN NUMBER
 ,P_DOCUMENTO IN CUENTAS.DOCUMENTO%TYPE
 ,P_PCN_NUMERO_HC IN CUENTAS.PCN_NUMERO_HC%TYPE
 ,P_BENEFICIARIO IN PERSONAL.CODIGO%TYPE := NULL 
 ,P_FECHA IN DATE := NULL
 ,P_TIPO_REMUNERACION IN VARCHAR2 := 'HNR'
 ,P_EVLCLN IN HOJAS_DE_EVOLUCION.NUMERO%TYPE
 ,P_INS_OR_DEL IN VARCHAR2
 ,P_POOL IN NUMBER := 0
 );
/* Devuelve si esta contabilizada la factura, cuota, etc en esa fecha */
FUNCTION VER_SI_CONTABILIZADO
 (DFECHA DATE,
  vSistema VARCHAR2:=NULL
 )
 RETURN CHAR;

/* Devuelve el IVA para esa fecha */
FUNCTION DEVUELVE_IVA
 (DFECHA DATE := NULL
 )
 RETURN NUMBER;
PRAGMA RESTRICT_REFERENCES (DEVUELVE_IVA, WNPS, WNDS);

/* Validar todas los datos necesarios para el SRI */
FUNCTION VALIDAR_DATOS_SRI
 (VIDVALIDACION VARCHAR2
 ,DFECHACMPCONTABLE DATE
 ,VRUC VARCHAR2
 ,VTIPOCMP VARCHAR2
 ,DFECHACMP DATE
 ,VSERIECMP VARCHAR2
 ,VSECNTA VARCHAR2
 ,DFECHANTA DATE
 ,VFACTURA VARCHAR2
 ,VAUTORIZACION VARCHAR2
 ,VIDCREDITO_GASTO VARCHAR2
 ,VTIPORF VARCHAR2
 ,VSERIENTA VARCHAR2 := NULL
 ,VAUTORIZACIONNTA VARCHAR2 := NULL
 ,VCMPCNT VARCHAR2 := NULL
 ,VMOSTRAROESCRIBIR VARCHAR2 := NULL
 )
 RETURN NUMBER;

/* valida la identificacion (Cedula, Ruc o Pasaporte) se correcta */
PROCEDURE VALIDA_IDENTIFICACION
 (VID VARCHAR2
 ,VTIPOID VARCHAR2
 );
/*valida permisos modulos*/
PROCEDURE ROL_HABILITADO_PERMISO
 (
  DFECHA       DATE := NULL,
  VMODULO      IN PERMISOS.MDL_MODULO%TYPE,
  VCOMPONENTE  IN PERMISOS.COMPONENTE%TYPE,
  VInsertar    OUT VARCHAR2,  -- := NULL,
  VActualizar  OUT VARCHAR2,  --:= NULL,
  VEliminar    OUT VARCHAR2,  --:= NULL
  VConsultar   OUT VARCHAR2   --:= NULL

 );
/*primer registro*/
FUNCTION PRIMER_REGISTRO
 (
  NCTACBR_NUMERO CUOTAS_A_COBRAR.CTACBR_NUMERO%TYPE
 )
 RETURN NUMBER;

 /*ultimo registro*/
FUNCTION ULTIMO_REGISTRO
 (
  NCTACBR_NUMERO CUOTAS_A_COBRAR.CTACBR_NUMERO%TYPE
 )
 RETURN DATE; 
FUNCTION DEVUELVE_PORCENTAJE_PROMOCION
 (VTIPOCRG IN VARCHAR2
 ,VCODCRG IN VARCHAR2
 ,VNUMEROHC IN PACIENTES.NUMERO_HC%TYPE
 ,VMODO IN VARCHAR2 := 'NORMAL'
 ,VPORCENTAJE_PROMOCION IN DETALLES_PROMOCIONES.PORCENTAJE_PROMOCION%TYPE
 )
 RETURN NUMBER;

FUNCTION DEVUELVE_PROMOCION
(nHC NUMBER,vTipoCrg VARCHAR2
,vCodCrg VARCHAR2
,vPrmPcn VARCHAR2) RETURN NUMBER;

------------------------------ FUNCIONES AÑADIDAS POR RINA PARA RECATEGORIZAR CUENTAS  ---------------
FUNCTION DEVUELVE_PORCENTAJE_PRM
 (VTIPOCRG IN VARCHAR2
 ,VCODCRG IN VARCHAR2
 ,VPCN_NUMERO_HC IN NUMBER
 ,vPrmPcn VARCHAR2
 )
 RETURN NUMBER;
 
PROCEDURE RECATEGORIZAR_CUENTA_POR_HC
(VPCN_NUMERO_HC IN NUMBER);

 
PROCEDURE RECATEGORIZAR_CUENTA
(VPCN_NUMERO_HC IN NUMBER,FECHA_INICIAL IN DATE,FECHA_FINAL IN DATE,PROMO IN VARCHAR);

PROCEDURE RECATEGORIZAR_CUENTA_PRD
(FECHA_INICIAL IN DATE,FECHA_FINAL IN DATE);

------------------------------ FUNCIONES AÑADIDAS POR RINA PARA RECATEGORIZAR CUENTAS  ---------------

/* Ver si el paciente indicado esta en la base de datos */
FUNCTION EXISTE_PACIENTE
 (NNUMERO_HC NUMBER
 )
 RETURN BOOLEAN;
/* Devuelve las dosis administradas para cada prescripción */
FUNCTION CUMPLIMIENTOS_PX
 (NNUMCLAVE NUMBER
 ,DFECHA DATE
 ,NPX_NUM NUMBER
 ,VPX CHAR := 'NULL'
 )
 RETURN VARCHAR2;
/* Busca el ultimo diagnostico oncológico */
FUNCTION ULTIMO_DIAGNOSTICO
 (NNUMEROHC NUMBER
 ,VTIPO VARCHAR2
 )
 RETURN VARCHAR2;
PRAGMA RESTRICT_REFERENCES (ULTIMO_DIAGNOSTICO, WNDS);
/* Busca el último diagnóstico (función sobrecargada) */
FUNCTION ULTIMO_DIAGNOSTICO
 (NNUMEROHC NUMBER
 ,VTIPO VARCHAR2
 ,VENFCOD IN OUT VARCHAR2
 )
 RETURN VARCHAR2;
/* Busca el ultimo Diagnostico (función sobrecargada) */
FUNCTION ULTIMO_DIAGNOSTICO
 (NNUMEROHC NUMBER
 ,VTIPO VARCHAR2
 ,NDGNID IN OUT NUMBER
 )
 RETURN VARCHAR2;

END  GNRL;
